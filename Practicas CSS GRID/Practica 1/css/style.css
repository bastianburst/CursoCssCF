:root{
    
    --red: hsl(0, 78%, 62%);
    --cyan: hsl(180, 62%, 55%);
    --orange: hsl(34, 97%, 64%);
    --blue: hsl(212, 86%, 64%);
    --very-dark-blue: hsl(234, 12%, 34%);
    --grayish-blue: hsl(229, 6%, 66%);
    --very-light-gray: hsl(0, 0%, 98%);
    --light-silver: hsl(0, 0%, 87%);
}

*{
    margin: 0;
    box-sizing: border-box;
}

body{
    font-family: 'Poppins', sans-serif;
    background-color: var(--light-silver);
}

.card{
    width: 90%;
    max-width: 1200px;
    margin: 0 auto;
    padding: 80px 0;
    overflow: hidden;
    text-align: center;
}

.card__title{
    font-size: 1.7rem;
    font-weight: 200;
    line-height: 1.5;
    color: var(--very-dark-blue);
}

.card__title--bold{
    font-weight: 600;
}

.card__paragraph{
    line-height: 1.5;
    color: var(--grayish-blue);
    margin-top: 1.5em;
}

.card__container{
    padding-top: 80px;
    text-align: left;

    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: repeat(4,1fr);
    grid-template-areas: 
    "carde1"
    "carde2"
    "carde3"
    "carde4";

    justify-items: center;
    gap: 2.5em ;
}

.card__item{
    width: 95%;
    max-width: 350px;
    padding: 1.5em 1.7em;
    border-radius: 6px;
    box-shadow: 0 6px 22px -6px hsla(213, 50%, 9%, 0.5);
    border-top: 10px solid var(--cyan);
    background-color: var(--very-light-gray);

    grid-area: carde1;
}
/*Esta vez usamos nth-child para modificar cada elemento
La pseudo-clase :nth-child() de CSS coincide con uno o 
más elementos en función de su posición entre un grupo 
de hermanos.

selecciona uno o más elementos en función de su posición entre un grupo de hermanos, contando desde el final.*/
.card__item:nth-child(2){
    grid-area: carde2;
    border-top:  10px solid var(--red);
}
.card__item:nth-child(4){
    grid-area: carde3;
    border-top:  10px solid var(--orange);
}
.card__item:nth-child(3){
    grid-area: carde4;
    border-top:  10px solid var(--blue);
}

.card__name{
    font-size: 1.5rem;
    margin-bottom: 16px;
}

.card__copy{
    color: var(--very-dark-blue);
    font-weight: 200;
    padding-bottom: 40px;
}

.card__picture{
    width: max-content;
    margin-left: auto;
}

.card__img{
    display: block;
}

@media (min-width:768px) {
    .card__container{
        grid-template-columns: repeat(3,1fr);
        /* Vemos representada la grid de 3 * 4 que creamos
        con las grid areas */
        grid-template-areas: 
        ".      carde4       ."
        "carde2  carde4   carde3"
        "carde2  carde1   carde3"
        ".      carde1        ."
        ;
        /* Al poner puntos indicamos que será espacio vacio
        ASí acomodamos los elementos en la grid 
        es interesante la forma de usar areas*/
        gap: 2em ;
    }
}