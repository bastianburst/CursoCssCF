:root {
    /* Custome properties */
    --dark-violet: hsl(256, 26%, 20%);
    --grayish-blue: hsl(216, 30%, 68%);
    --very-dark-violet: hsl(270, 9%, 17%);
    --dark-grayish-violet: hsl(273, 4%, 51%);
    --very-light-gray: hsl(0, 0%, 98%);


    --font1: 'DM Serif Display', serif;
    --padding-container: 80px 0;
    /*Esto lo ponemos para que cuando abramos el menú desplegable, 
    no haga scroll la pagina
    se define en el root*/
    scroll-padding-top: 80px;
}

* {
    margin: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Karla', sans-serif;
}

.container {
    /*Aquí indicamos que siempre el valor sea el 90%
    pero que no pase de 1200px*/
    max-width: 1200px;
    width: 90%;
    overflow: hidden;
    margin: 0 auto;
    padding: var(--padding-container);
}

.hero {
    background-color: var(--dark-violet);
    color: #fff;
    --padding-container: 0;
}

.nav {
    background-color: #fff;
}

.nav__container {
    height: 80px;
    display: flex;
    align-items: center;
    justify-content: space-between;
}

.nav__links:target {
    clip-path: circle(150% at top left);
}

.nav__links:target~.nav__hamburguer--last {
    display: block;
}

.nav__links {
    position: absolute;
    top: 80px;
    bottom: 0;
    right: 0;
    left: 0;
    display: flex;
    flex-direction: column;
    align-items: center;
    padding-top: 3em;
    background-color: #1c1919;
    gap: 3em;
    /* Clip plath sirve para
    Crea una región de recorte que
     establece qué parte de un elemento
      debe mostrarse. 
      Las partes que están dentro de 
      la región se muestran, mientras que
       las que están fuera se ocultan. */
    clip-path: circle(0% at top left);
    /*Definiendo que al dar click en este botón
haga una transición hacemos que funcione el efecto clip path*/
    transition: .4s clip-path;
}

/*Tarea*/
.nav__links::before{
    content: "";
    position: absolute;
    top:81px;
    background-image: url("../images/bg-pattern-mobile-nav.svg");
    width: 100%;
    height: 480px;
    /* background-repeat: no-repeat; */
    background-size: cover;
    background-position: bottom;
    z-index: -1;
}

.nav__link {
    text-decoration: none;
    color: #fff;
    text-transform: uppercase;
    font-weight: 700;
}

.nav__link--cta {
    color: #fff;
    border: 1px solid;
    padding: .8em 2em;
}

/* Aquí posicionamos el botón hamburguesa y lo ponemos oculto
en la vista para moviles */
.nav__hamburguer--last {
    display: none;
    position: absolute;
    right: 5%;
    top: 24px;
}

.nav__icon,
.nav__logo {
    display: block;
}

.hero__main {
    width: 100%;
}

/* NO siempre se necesita poner position absolute, 
para hacer el truco, como por ejemplo en este caso

EN ESTE CASO NO USAMOS POSISITON ABSOLUTE
PORQUE LO QUE PRETENDE ES QUE EL ELEMENTO A INSERTAR HAGA PARTE DEL FLUJO DEL DOCUMENTO
POR ESO PONEMOS ORDER:1 PARA QUE CAMBIE DE POSICIÓN MAS ADELANTE
AL PONER POSICIÓN ABSOLUTE ELEEMENTO SE SALE DEL FLUJO NORMAL Y SE POSICIONA
POR ENCIMA EN BASE A LA EQTIQUETA PADRE QUE TENGA.*/
.hero__main::before {
    content: "";
    display: block;
    width: 100%;
    height: 370px;
    background-image: url('../images/image-intro-mobile.jpg');
    background-size: cover;
    background-position: center;
}

.hero__texts {
    width: 90%;
    margin: 0 auto;
    /* Aquí estariamos diciendo que el padding seria de 80px arriba y abajo, y de 0 en los costados */
    padding: 80px 0;
    text-align: center;
}

.title {
    font-size: 2.5rem;
    font-family: var(--font1);
    /* separación vertical del texto */
    letter-spacing: 3px;
}

.hero__paragraph {
    /**Alto de linea es decir el espacio entre cada salto de linea*/
    line-height: 1.5;
    margin-top: 1em;
}

.cta {
    display: inline-block;
    margin-top: 1.5em;
    border: 1px solid #fff;
    text-decoration: none;
    color: #fff;
    padding: .8em 2.2em;
}

/* different */

.different {
    text-align: center;
}

.title--different {
    position: relative;
    padding-top: 30px;
}

.title--different::before {
    /* Aqui hicimos una linea que estará 
    inmediatamante despues de el elmento tittle_different */
    content: "";
    position: absolute;
    top: -5px;
    right: 0;
    left: 0;
    display: block;
    margin: 0 auto;
    background-color: var(--dark-grayish-violet);
    width: 120px;
    height: 1px;
}

/* Lo ponemos en columnas los elementos */
.different__items {
    margin-top: 3.5em;
    display: flex;
    flex-direction: column;
    gap: 3em;
}

.different__icon {
    display: block;
    margin: 0 auto;
    margin-bottom: 2em;
}

.different__title {
    font-family: var(--font1);
    font-size: 1.5rem;
    letter-spacing: 3px;
}

.different__paragraph {
    margin-top: 1em;
    line-height: 1.5;
    color: var(--dark-grayish-violet);
}

/* find */

.find {
    padding: 80px 0;
    --padding-container: 60px 30px;
}

.find__container {
    position: relative;
    z-index: 1;
    color: #fff;
    background-color: var(--dark-violet);
    text-align: center;
}

/* Otra vez el truco de poner poisición relative a secas 
Luego usar ::befire para ponerle un position absolute
Content; "" y poner lo que queiras, un fondo, una linea, una imagen superpuesta
etc.
En este caso ponemos z-index: -1 para indicar que este elemento tiene
que estar detrás del texto no super puesto*/
.find__container::before {
    content: "";
    position: absolute;
    top: 0;
    right: 0;
    width: 50%;
    height: 100%;
    background-image: url('../images/bg-pattern-how-we-work-mobile.svg');
    background-size: cover;
    background-repeat: no-repeat;
    z-index: -1;
}

/* footer */

.footer {
    background-color: var(--very-light-gray);
}

.footer__brand {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1.5em;

    padding-bottom: 2.5em;
    margin-bottom: 2.5em;

    border-bottom: 1px solid var(--dark-grayish-violet);
}

.footer__logo {
    display: block;
}

/* COntenedor de los elementos del footer, las barras de navegación */
.footer__media {
    display: flex;
    gap: 1em;
    justify-content: center;
    align-items: center;
}

.footer__navigation {
    display: flex;
    flex-direction: column;
    gap: 3em;
}

.footer__nav {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1.5em;
}

.footer__link {
    text-decoration: none;
    color: var(--dark-violet);
    font-weight: 700;
    text-transform: uppercase;
}

.footer__link--first {
    margin-bottom: 1em;
    color: var(--dark-grayish-violet);
}

/* Responsive desing */
@media (min-width:768px) {

    /*Aqui definimos que cuando pase a este tamaño de pantalla
el elemento ya no tenga el clip-path, que pase a su 
valor iniciar, esto lo hacemos poniendo el valor unset*/
    .nav__links:target {
        clip-path: unset;
    }

    /*
Tampoco queremos que se muestre el icono de cerrar en desktop
Asi que ponemos a estas dos clases el display none para ocultarlos*/
    .nav__links:target~.nav__hamburguer--last {
        display: none;
    }

    .nav__links {
        display: flex;
        gap: 3em;

        /*HAces que todos los valores de position, clip-path, transition
se reinicien con unset;*/
        position: unset;
        flex-direction: row;
        padding-top: 0;
        background-color: #fff;
        clip-path: unset;
        transition: unset;
    }
    .nav__link {
        color: var(--dark-grayish-violet);
        padding: .8em 0;
    }

    .nav__link--cta {
        color: var(--dark-violet);
        padding: .8em 2em;
    }

    .nav__hamburguer {
        display: none;
    }

    .hero {
        background-image: linear-gradient(to bottom, var(--dark-violet) 75%, #fff 75%);
    }

    .hero__main {
        --padding-container: 100px 0;
        width: 90%;
        display: flex;
        justify-content: space-between;
    }

    /* 
    .hero__main::before {
        content: "";
        display: block;
        width: 100%;
        height: 370px;
        background-image: url('../images/image-intro-mobile.jpg');
        background-size: cover;
        background-position: center;
    }

    Observa los cambios que le hacemos a esta clase
    content y display los quitamos para que quedne igua
    modificamos wisth, height
    y ponemos order para cambiar la posucuón de la imagen
    Además cambiamos la imagen de mobil por la desitinada a desktop
    que tiene dimensiones diferentes
     */

    .hero__main::before {
        width: 48%;
        height: 530px;
        /*CAMBIAMOS LA IMAGEN DE MOBILE POR LA DE DESKTOP*/
        background-image: url('../images/image-intro-desktop.jpg');
        order: 1;
        z-index: 0;
        /* Le ponemos el order para que la imagen se vaya a la derecha 
        EN EL FLUJO DEL DOCUMENTO*/
    }

    .hero__texts {
        width: 49%;
        margin: 0;
        padding: 20px 0 0;
        text-align: left;
        position: relative;
    }

    .hero__texts::before {
        content: "";
        position: absolute;
        width: 120px;
        height: 3px;
        top: 0;
        left: 0;
        background-color: #fff;
    }

    .title {
        font-size: 2.7rem;
    }

    /* different */

    .different {
        text-align: left;
    }

    .title--different::before {
        margin: 0;
    }

    .different__items {
        /* Cambiamos a row en lugar de columnas para desktop */
        flex-direction: row;
        gap: 2em;
    }

    .different__item {
        /* Como el elemento del emedia es mas grande
        USamos flex 1 en esta clase para que sean del mismo tamaño */
        flex: 1;
    }

    .different__icon {
        margin-left: 0;
    }

    .different__title {
        font-family: var(--font1);
        font-size: 1.5rem;
        letter-spacing: 3px;
    }

    .different__paragraph {
        margin-top: 1em;
        line-height: 1.5;
        color: var(--dark-grayish-violet);
    }

    /* find */

    .find {
        --padding-container: 60px;
    }

    .find__container {
        display: flex;
        /* Mandar los elementos a las esquinas */
        justify-content: space-between;
        /* Alinear los elementos al centro en el cross axis */
        align-items: center;
        text-align: left;
    }

    .find__container::before {
        /* En desktop cambiamos la imagen */
        background-image: url('../images/bg-pattern-how-we-work-desktop.svg');
    }

    .title--find {
        width: 60%;
    }

    /* footer */


    .footer__brand {
        flex-direction: row;
        justify-content: space-between;
        gap: 0;
    }


    .footer__navigation {
        flex-direction: row;
        justify-content: space-between;
    }

    .footer__nav {
        /* El footer nav es en columna por lo que el cross axis es horizontal
        Con align items flex stars hariamos que los elementos se alineen a la izquierda
        que es el resultado deseado */
        width: 20%;
        align-items: flex-start;
    }


    /*Tarea, poner las imagenes en el elemento con before y after*/
    .hero {
        position: relative;
    }

    .hero::before {
        content: "";
        position: absolute;
        background-image: url("../images/bg-pattern-intro-right-desktop.svg");
        width: 100%;
        height: 530px;
        top: 5rem;
        right: 0;
        background-repeat: no-repeat;
        background-position: right;
        z-index: 1;


    }

    .hero::after {
        content: "";
        position: absolute;
        background-image: url("../images/bg-pattern-intro-left-desktop.svg");
        width: 100%;
        height: 530px;
        top: 25rem;
        right: 0;
        background-repeat: no-repeat;
        background-position: left;
        z-index: 1;


    }
}